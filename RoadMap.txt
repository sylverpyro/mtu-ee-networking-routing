Inputs:
    Required: None
    Planned: Allow filename for network description table as input

Outputs:
    * Least cost route from root node to all dest. nodes
        - Inf. if no route available
    * Cost from root node to dest. nodes for each path
        - Cost from point to point on each path

Sample Network
    A 2-> B 3-> C

    6     2     1
    |     |     |
    \/    \/    \/

    D <-1 E <-4 F

Sample Output for Root=A
    Node A
    Dest.   Route                   Total Cost
    A       A->A(0)                     0
    B       A->B(2)                     2
    C       A->B(2) B->C(3)             5
    D       A->B(2) B->E(2) E->D(1)     5
    E       A->B(2) B->E(2)             4
    F       A->B(2) B->C(3) C->F(1)     6

Classes:

int** dijkstra( int rootNode, int** networkMap )
    Inputs:
	rootNode - Node number to be concidered the root node
	networkMap - NxN matrix representing cost of each network link
			N = number of nodes in network

    Returns: Matrix with shortest rout and total cost to each node

void dataWriter( int** pathTable, const char[] outputFile)
    Inputs: Matrix with shortest rout and total cost generated by dijkstra()
    Returns: Nothing
    Modifies: Output file to write data to

Phase 1:
    Design dijkstra function, all output to std out (ignore arrays)

Phase 2:
    Store generated data from dijkstra to an array and return it

Phase 3:
    Write dataWriter function

Phase 4:
    Confirm operation wtih test case

Phase 5 (optional):
    Implement network description read-in from a file
